#!/bin/bash
#Usage: clextract <architecture> <bin>
# It assumes you have qemu-user installed and the right libc6-cross for the
# architecture.

# This runs clextract for the provided architecture against the provided
# binary.

if [ -z $1 ] || [ -z $2 ]  ; then
    echo "Parameters: <architecture> <binary>"
    exit 1
fi

arch=$1
bin=$2

cle_bin=~/.virtualenvs/angr/bin
cle_lib=~/.virtualenvs/angr/lib

if [ ! -d ~/.virtualenvs/angr/bin/ ] ; then
	echo "This must be called from Angr's python virtual environment (workon angr) and cle must be installed in it"
	exit 1
fi

arch_list="armel armhf x86 i386 x86_64 ppc ppc64 mips mipsel"

[[ $arch_list =~ (^| )$arch($| ) ]] && echo "$arch: ok" || arch=0
if [ $arch -eq 0 ] ; then
	echo "Invalid architecture - valid ones are $arch_list"
	exit 1
fi

qemu="qemu-${arch}"
ldpath="${cle_lib}/${arch}/"
clepath="${cle_bin}/${arch}/clextract"


# Target's libraries
if [ "${arch}" = "i386" ] ; then
    inc="/lib32"

elif [ "${arch}" = "armhf" ] ; then
    inc="/usr/arm-linux-gnueabihf"
	qemu="qemu-arm"

elif [ "${arch}" = "armel" ] ; then
    inc="/usr/arm-linux-gnueabi"
	qemu="qemu-arm"

elif [ "${arch}" = "ppc" ] ; then
    inc="/usr/powerpc-linux-gnu"

else
	lib=$(ls /usr | grep ${arch}- | sed 's/\n//')
    inc="/usr/$lib/"
fi

if ! [ -d "$inc" ] ; then
    echo "-L $inc"
    echo "Check that you have the right libc6-cross for ${arch}"
    exit 2
fi

${qemu} -L ${inc} -E LD_LIBRARY_PATH=${ldpath}:/lib ${arch}/clextract ${bin}

